// Generated by CoffeeScript 1.6.3
(function() {
  var EventEmitter, co,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __slice = [].slice;

  EventEmitter = require('events').EventEmitter;

  co = require('co');

  module.exports = (function(_super) {
    __extends(exports, _super);

    function exports() {
      return exports.__super__.constructor.apply(this, arguments);
    }

    exports.prototype.on = function(type, listener) {
      var fn;
      fn = function() {
        var args;
        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        return co(listener).apply(null, args);
      };
      fn.listener = listener;
      return exports.__super__.on.call(this, type, fn);
    };

    return exports;

  })(EventEmitter);

}).call(this);
